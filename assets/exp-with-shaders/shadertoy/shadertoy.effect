CCEffect %{
  techniques:
  - passes:
    - vert: toy-vs:vert
      frag: toy-fs:frag
}%

CCProgram toy-vs %{
  precision mediump float;
  #include <cc-global>
  #include <cc-local>
  #include <input>

  in vec2 a_texCoord;
  out vec2 v_uv;

  highp vec4 vert () {
    highp vec4 position;
    CCVertInput(position);
    v_uv = vec2(a_texCoord.x, 1.0 - a_texCoord.y);
    return cc_matViewProj * cc_matWorld * position;
  }
}%

CCProgram toy-fs %{
  precision mediump float;
  #include <cc-global>
  #include <output>

  #define iResolution cc_screenSize
  #define iTime cc_time.x
  #define iTimeDelta cc_time.y
  #define iFrame cc_time.z

  #include "shadertoy"

  in vec2 v_uv;

  vec4 frag () {
    vec4 o;
    mainImage(o, v_uv * cc_screenSize.xy); // simulate fragCoord with mesh uv
    return CCFragOutput(o);
  }
}%
